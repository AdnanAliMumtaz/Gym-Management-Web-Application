@model WebApplication1.Models.ViewModels.DashboardViewModel

@{
    ViewData["Title"] = "Members";
    Layout = "/Pages/_Layout.cshtml";
}


<style>
    .memberBody {
        height: 100%;
        padding: 20px;
    }

    .upperBody {
        border-radius: 7px;
        padding: 20px;
        background-color: #D9D9D9;
        margin: 0px 10px;
    }

    .middleBody {
        display: flex;
        padding: 25px 5px;
        height: 70%;
    }

    .middleBodyLeft {
        width: 70%;
        border-radius: 5px;
        border: 2px solid #ECECEC;
        margin: 0px 10px;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);
    }

    .middleBodyLeft table {
        width: 100%;
    }






    .middleBodyRight {
        width: 30%;
        height: 100%;
        background-color: #304D70;
        border-radius: 7px;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.3);
        /* padding: 25px 5px; */
        margin: 0px 10px;
        /* margin: 15px; */
        text-align: center;
        position: relative;

    }

    .middleUpper {
        width: 100%;
    }
    .middleMiddle {
        width: 100%;
    }
    .middleMiddle img {
        height: 300px;
    }


    /*Testing*/
    .middleBodyLeft table {
        width: 100%;
        border-collapse: collapse;
        margin-top: 20px;
    }

    .middleBodyLeft th, .middleBodyLeft td {
        padding: 8px;
        text-align: left;
        border-bottom: 1px solid #ddd; /* Add a bottom border */
    }

    .middleBodyLeft th {
        /* background-color: #f2f2f2; */
    }

    .middleBodyLeft tr:hover {
        background-color: #f5f5f5;
    }

    .middleBodyLeft a {
        display: inline-block;
        padding: 6px 12px;
        text-align: center;
        text-decoration: none;
        background-color: #007bff;
        color: #fff;
        border-radius: 4px;
    }









    /* Styling for the pop-up container */
    .popup-container {
        display: none;
        position: fixed;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        background-color: white;
        padding: 20px;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        z-index: 1000;
    }

    /* Styling for the pop-up form */
    .popup-form {
        /* Add your form styling here */
    }

    /* Styling for the overlay/background behind the pop-up */
    .overlay {
        display: none;
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0, 0, 0, 0.5);
        z-index: 999;
    }

    .middleBottom {
        overflow: auto;
        height: 30%;
        margin: 15px;
        margin-top: -40px;
        border-radius: 7px;
        background-color: red;
        z-index: 2; /* Set a higher z-index to bring it to the front */
    }

    .middleMiddle {
        position: relative; /* Make sure position is set to relative or absolute */
        z-index: 1; /* Set a lower z-index compared to .middleBottom */
    }

</style>

<div class="memberBody">
    <div class="upperBody">
        <h4>Members</h4>
    </div>

    <div class="middleBody">


        <!-- Button to trigger the pop-up -->
        <button id="openPopupButton">Open Pop-up</button>

        <!-- Hidden pop-up form -->
        <div id="popupFormContainer" class="popup-container">
            <form method="post" asp-controller="Members" asp-action="AddDummyData" class="popup-form">
                <!-- Member information fields -->
                <label for="FirstName">First Name:</label>
                <input type="text" id="FirstName" name="FirstName" required>

                <label for="LastName">Last Name:</label>
                <input type="text" id="LastName" name="LastName" required>

                <label for="Email">Email:</label>
                <input type="text" id="Email" name="Email" required>

                <label for="PhoneNumber">PhoneNumber:</label>
                <input type="text" id="PhoneNumber" name="PhoneNumber" required>

                <!-- TransactionFee information fields -->
                <label for="Amount">Transaction Amount:</label>
                <input type="text" id="Amount" name="Amount" required>

                <label for="DatePaid">Date Paid:</label>
                <input type="date" id="DatePaid" name="DatePaid" required>

                <button type="submit">Add Dummy Data</button>
            </form>
        </div>




        <div class="middleBodyLeft">
                <form asp-controller="Members" asp-action="Index" method="get">
                    <label for="search">Search:</label>
                    <input type="text" name="search" id="search" />

                </form>

                <div id="search-results">
                    <!-- Display search results here -->
                </div>            
        </div>


        <div class="middleBodyRight">
            <div class="middleUpper">
                <h4>Overall Statistics</h4>
                <p>Overview 2023</p>
            </div>
            <div class="middleMiddle">
                <img src="~/images/member3D.png" />
            </div>
            <div class="middleBottom">

            </div>
        </div>




    </div>
</div>




<div class="entryLogs">
    <!-- Dropdown list to select the member -->
    <form method="post" asp-action="AddEntry">
        <label for="memberId">Select Member: </label>
        <select name="memberId" id="memberId">
            @foreach (var member in Model.Members)
            {
                <option value="@member.MemberID">@($"{member.MemberFirstName} {member.MemberLastName}")</option>
            }
        </select>
        <button type="submit">Add Entry</button>
    </form>



    <div class="entryLogs">
        <h3>Entry Logs</h3>
        <table>
            <thead>
                <tr>
                    <th>ID</th>
                    <th>Entry Date</th>
                    <th>RFID Tag</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var entryLog in Model.EntryLogs)
                {
                    <tr>
                        <td>@entryLog.EntryLogId</td>
                        <td>@entryLog.EntryDate.ToString("yyyy-MM-dd HH:mm:ss")</td>
                        <td>@entryLog.RfidTag</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>



</div>

<script>
    document.addEventListener("DOMContentLoaded", function () {
        // Get references to the button, pop-up container, and overlay
        const openPopupButton = document.getElementById("openPopupButton");
        const popupFormContainer = document.getElementById("popupFormContainer");
        const overlay = document.createElement("div");
        overlay.className = "overlay";

        // Function to open the pop-up
        function openPopup() {
            popupFormContainer.style.display = "block";
            document.body.appendChild(overlay);
        }

        // Function to close the pop-up
        function closePopup() {
            popupFormContainer.style.display = "none";
            overlay.remove();
        }

        // Event listener for the button click
        openPopupButton.addEventListener("click", openPopup);

        // Event listener for the overlay click (to close the pop-up)
        overlay.addEventListener("click", closePopup);
    });

    // Attach an event listener to the search input field
    document.getElementById('search').addEventListener('input', function () {
        // Get the value entered in the search input field
        var searchQuery = this.value;

        // Make an AJAX request to the server to fetch search results
        fetch('/Members/Search?search=' + encodeURIComponent(searchQuery))
            .then(response => response.text())
            .then(html => {
                // Update the search results container with the fetched results
                document.getElementById('search-results').innerHTML = html;
            })
            .catch(error => console.error('Error fetching search results:', error));
    });

    // Trigger an initial search when the page loads to show all members
    document.addEventListener('DOMContentLoaded', function () {
        fetch('/Members/Search')
            .then(response => response.text())
            .then(html => {
                // Update the search results container with the fetched results
                document.getElementById('search-results').innerHTML = html;
            })
            .catch(error => console.error('Error fetching search results:', error));
    });

</script>

